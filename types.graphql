type User {
    id: ID!
    username: String! @search(by: [hash])
    developer: [Developer] @hasInverse(field: user)
    host: [Project] @hasInverse(field: hosts)
    stars: [Project]
}

type Project {
    id: ID!
    title: String! @search(by: [hash])
    description: String!
    hosts: [User]! @hasInverse(field: host)
    developers: [Developer] @hasInverse(field: project)
    entities: [Entity] @hasInverse(field: project)
}

enum EntityStatus {
    READY
    PENDING
    FAIL
}

type Entity {
    id: ID!
    project: Project!
    title: String! @search(by: [hash])
    description: String!
    developers: [Developer]
    status: EntityStatus!
}

type Developer {
    id: ID!
    project: Project!
    name: String! @search(by: [hash])
    user: [User] @hasInverse(field: developer)
    entities: [Entity] @hasInverse(field: developers)
}



