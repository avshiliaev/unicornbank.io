

type Comment {
    id: ID!
    task: Task!
    developer: Developer!
    content: String!
}

type Tag {
    id: ID!
    title: String!
    project: Project!
    developers: [Developer]
}

type Task {
    id: ID!
    project: Project!
    column: Column
    title: String! @search(by: [hash])
    developers: [Developer]
    hours: Int!
    deadline: String!
    content: String!
    priority: Int!
    complete: Boolean!
    likes: [Developer] @hasInverse(field: liked)
    comments: [Comment] @hasInverse(field: task)
}

type Column {
    id: ID!
    board: Board!
    title: String!
    tasks: [Task] @hasInverse(field: column)
}

type Board {
    id: ID!
    project: Project!
    title: String!
    columns: [Column] @hasInverse(field: board)
    order: [String]
}

type Developer {
    id: ID!
    project: Project!
    name: String! @search(by: [hash])
    availability: Int!
    user: [User] @hasInverse(field: roles)
    tags: [Tag] @hasInverse(field: developers)
    tasks: [Task] @hasInverse(field: developers)
    liked: [Task]
}

type User {
    id: ID!
    username: String! @search(by: [hash])
    password: String!
    location: String!
    roles: [Developer] @hasInverse(field: user)
    stars: [Task]
}

type Project {
    id: ID!
    title: String! @search(by: [hash])
    description: String!
    tags: [Tag] @hasInverse(field: project)
    tasks: [Task] @hasInverse(field: project)
    boards: [Board] @hasInverse(field: project)
    developers: [Developer] @hasInverse(field: project)
}
